kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/erinemma/StudioProjects/MoviesApp/core/designsystem/src/main/java/com/example/moviesapp/designsystem/theme/Theme.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at jdk.internal.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:MoviesAppTheme visibility:public modality:FINAL <> (darkTheme:kotlin.Boolean, androidTheme:kotlin.Boolean, disableDynamicTheming:kotlin.Boolean, content:@[Composable] kotlin.Function0<kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:darkTheme index:0 type:kotlin.Boolean
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:androidTheme index:1 type:kotlin.Boolean
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:disableDynamicTheming index:2 type:kotlin.Boolean
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:content index:3 type:@[Composable] kotlin.Function0<kotlin.Unit>
  BLOCK_BODY
    VAR name:colorScheme type:androidx.compose.material3.ColorScheme [val]
      WHEN type=androidx.compose.material3.ColorScheme origin=WHEN
        BRANCH
          if: GET_VAR 'androidTheme: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
          then: WHEN type=androidx.compose.material3.ColorScheme origin=IF
            BRANCH
              if: GET_VAR 'darkTheme: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
              then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:DarkAndroidColorScheme type:androidx.compose.material3.ColorScheme visibility:private [final,static]' type=androidx.compose.material3.ColorScheme origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:LightAndroidColorScheme type:androidx.compose.material3.ColorScheme visibility:private [final,static]' type=androidx.compose.material3.ColorScheme origin=null
        BRANCH
          if: CALL 'public final fun ANDAND (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
              $this: GET_VAR 'disableDynamicTheming: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
            arg1: CALL 'public final fun supportsDynamicTheming (): kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt' type=kotlin.Boolean origin=null
          then: BLOCK type=androidx.compose.material3.ColorScheme origin=null
            VAR name:context type:android.content.Context [val]
              CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
                $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
                  CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
            WHEN type=androidx.compose.material3.ColorScheme origin=IF
              BRANCH
                if: GET_VAR 'darkTheme: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
                then: CALL 'public final fun dynamicDarkColorScheme (context: android.content.Context): androidx.compose.material3.ColorScheme declared in androidx.compose.material3.DynamicTonalPaletteKt' type=androidx.compose.material3.ColorScheme origin=null
                  context: GET_VAR 'val context: android.content.Context [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=android.content.Context origin=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CALL 'public final fun dynamicLightColorScheme (context: android.content.Context): androidx.compose.material3.ColorScheme declared in androidx.compose.material3.DynamicTonalPaletteKt' type=androidx.compose.material3.ColorScheme origin=null
                  context: GET_VAR 'val context: android.content.Context [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=android.content.Context origin=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: WHEN type=androidx.compose.material3.ColorScheme origin=IF
            BRANCH
              if: GET_VAR 'darkTheme: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
              then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:DarkDefaultColorScheme type:androidx.compose.material3.ColorScheme visibility:private [final,static]' type=androidx.compose.material3.ColorScheme origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:LightDefaultColorScheme type:androidx.compose.material3.ColorScheme visibility:private [final,static]' type=androidx.compose.material3.ColorScheme origin=null
    VAR name:emptyGradientColors type:com.example.moviesapp.designsystem.theme.GradientColors [val]
      CONSTRUCTOR_CALL 'public constructor <init> (top: androidx.compose.ui.graphics.Color, bottom: androidx.compose.ui.graphics.Color, container: androidx.compose.ui.graphics.Color, $mask0: kotlin.Int, $marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in com.example.moviesapp.designsystem.theme.GradientColors' type=com.example.moviesapp.designsystem.theme.GradientColors origin=DEFAULT_DISPATCH_CALL
        top: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
            <T>: kotlin.Long
            <R>: androidx.compose.ui.graphics.Color
            v: CONST Long type=kotlin.Long value=0
        bottom: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
            <T>: kotlin.Long
            <R>: androidx.compose.ui.graphics.Color
            v: CONST Long type=kotlin.Long value=0
        container: CALL 'public final fun surfaceColorAtElevation-3ABfNKs (elevation: androidx.compose.ui.unit.Dp): androidx.compose.ui.graphics.Color declared in androidx.compose.material3.ColorSchemeKt' type=androidx.compose.ui.graphics.Color origin=null
          $receiver: GET_VAR 'val colorScheme: androidx.compose.material3.ColorScheme [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=androidx.compose.material3.ColorScheme origin=null
          elevation: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
            $receiver: CONST Int type=kotlin.Int value=2
        $mask0: CONST Int type=kotlin.Int value=3
        $marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null
    VAR name:defaultGradientColors type:com.example.moviesapp.designsystem.theme.GradientColors [val]
      CONSTRUCTOR_CALL 'public constructor <init> (top: androidx.compose.ui.graphics.Color, bottom: androidx.compose.ui.graphics.Color, container: androidx.compose.ui.graphics.Color, $constructor_marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in com.example.moviesapp.designsystem.theme.GradientColors' type=com.example.moviesapp.designsystem.theme.GradientColors origin=null
        top: CALL 'public final fun getInverseOnSurface-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.material3.ColorScheme' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
          $this: GET_VAR 'val colorScheme: androidx.compose.material3.ColorScheme [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=androidx.compose.material3.ColorScheme origin=null
        bottom: CALL 'public final fun getPrimaryContainer-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.material3.ColorScheme' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
          $this: GET_VAR 'val colorScheme: androidx.compose.material3.ColorScheme [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=androidx.compose.material3.ColorScheme origin=null
        container: CALL 'public final fun getSurface-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.material3.ColorScheme' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
          $this: GET_VAR 'val colorScheme: androidx.compose.material3.ColorScheme [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=androidx.compose.material3.ColorScheme origin=null
        $constructor_marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null
    VAR name:gradientColors type:com.example.moviesapp.designsystem.theme.GradientColors [val]
      WHEN type=com.example.moviesapp.designsystem.theme.GradientColors origin=WHEN
        BRANCH
          if: GET_VAR 'androidTheme: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
          then: WHEN type=com.example.moviesapp.designsystem.theme.GradientColors origin=IF
            BRANCH
              if: GET_VAR 'darkTheme: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
              then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:DarkAndroidGradientColors type:com.example.moviesapp.designsystem.theme.GradientColors visibility:private [final,static]' type=com.example.moviesapp.designsystem.theme.GradientColors origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:LightAndroidGradientColors type:com.example.moviesapp.designsystem.theme.GradientColors visibility:private [final,static]' type=com.example.moviesapp.designsystem.theme.GradientColors origin=null
        BRANCH
          if: CALL 'public final fun ANDAND (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
              $this: GET_VAR 'disableDynamicTheming: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
            arg1: CALL 'public final fun supportsDynamicTheming (): kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt' type=kotlin.Boolean origin=null
          then: GET_VAR 'val emptyGradientColors: com.example.moviesapp.designsystem.theme.GradientColors [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=com.example.moviesapp.designsystem.theme.GradientColors origin=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: GET_VAR 'val defaultGradientColors: com.example.moviesapp.designsystem.theme.GradientColors [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=com.example.moviesapp.designsystem.theme.GradientColors origin=null
    VAR name:defaultBackgroundTheme type:com.example.moviesapp.designsystem.theme.BackgroundTheme [val]
      CONSTRUCTOR_CALL 'public constructor <init> (color: androidx.compose.ui.graphics.Color, tonalElevation: androidx.compose.ui.unit.Dp, $constructor_marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in com.example.moviesapp.designsystem.theme.BackgroundTheme' type=com.example.moviesapp.designsystem.theme.BackgroundTheme origin=null
        color: CALL 'public final fun getSurface-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.material3.ColorScheme' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
          $this: GET_VAR 'val colorScheme: androidx.compose.material3.ColorScheme [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=androidx.compose.material3.ColorScheme origin=null
        tonalElevation: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $receiver: CONST Int type=kotlin.Int value=2
        $constructor_marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null
    VAR name:backgroundTheme type:com.example.moviesapp.designsystem.theme.BackgroundTheme [val]
      WHEN type=com.example.moviesapp.designsystem.theme.BackgroundTheme origin=WHEN
        BRANCH
          if: GET_VAR 'androidTheme: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
          then: WHEN type=com.example.moviesapp.designsystem.theme.BackgroundTheme origin=IF
            BRANCH
              if: GET_VAR 'darkTheme: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
              then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:DarkAndroidBackgroundTheme type:com.example.moviesapp.designsystem.theme.BackgroundTheme visibility:private [final,static]' type=com.example.moviesapp.designsystem.theme.BackgroundTheme origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:LightAndroidBackgroundTheme type:com.example.moviesapp.designsystem.theme.BackgroundTheme visibility:private [final,static]' type=com.example.moviesapp.designsystem.theme.BackgroundTheme origin=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: GET_VAR 'val defaultBackgroundTheme: com.example.moviesapp.designsystem.theme.BackgroundTheme [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=com.example.moviesapp.designsystem.theme.BackgroundTheme origin=null
    VAR name:tintTheme type:com.example.moviesapp.designsystem.theme.TintTheme [val]
      WHEN type=com.example.moviesapp.designsystem.theme.TintTheme origin=WHEN
        BRANCH
          if: GET_VAR 'androidTheme: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
          then: CONSTRUCTOR_CALL 'public constructor <init> (iconTint: androidx.compose.ui.graphics.Color, $mask0: kotlin.Int, $marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in com.example.moviesapp.designsystem.theme.TintTheme' type=com.example.moviesapp.designsystem.theme.TintTheme origin=DEFAULT_DISPATCH_CALL
            iconTint: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.graphics.Color
                v: CONST Long type=kotlin.Long value=0
            $mask0: CONST Int type=kotlin.Int value=1
            $marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null
        BRANCH
          if: CALL 'public final fun ANDAND (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
              $this: GET_VAR 'disableDynamicTheming: kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=kotlin.Boolean origin=null
            arg1: CALL 'public final fun supportsDynamicTheming (): kotlin.Boolean declared in com.example.moviesapp.designsystem.theme.ThemeKt' type=kotlin.Boolean origin=null
          then: CONSTRUCTOR_CALL 'public constructor <init> (iconTint: androidx.compose.ui.graphics.Color, $constructor_marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in com.example.moviesapp.designsystem.theme.TintTheme' type=com.example.moviesapp.designsystem.theme.TintTheme origin=null
            iconTint: CALL 'public final fun getPrimary-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.material3.ColorScheme' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
              $this: GET_VAR 'val colorScheme: androidx.compose.material3.ColorScheme [val] declared in com.example.moviesapp.designsystem.theme.ThemeKt.MoviesAppTheme' type=androidx.compose.material3.ColorScheme origin=null
            $constructor_marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: CONSTRUCTOR_CALL 'public constructor <init> (iconTint: androidx.compose.ui.graphics.Color, $mask0: kotlin.Int, $marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in com.example.moviesapp.designsystem.theme.TintTheme' type=com.example.moviesapp.designsystem.theme.TintTheme origin=DEFAULT_DISPATCH_CALL
            iconTint: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.graphics.Color
                v: CONST Long type=kotlin.Long value=0
            $mask0: CONST Int type=kotlin.Int value=1
            $marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 44 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:587)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitBlock(IrElementVisitor.kt:122)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlock.accept(IrBlock.kt:18)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:1095)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 54 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 82 more


